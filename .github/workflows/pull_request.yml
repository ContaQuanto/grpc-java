name: CI

on:
  push:
    branches:
      - main

jobs:
  publish_jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew clean build test -x publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GH_PACKAGES_USERNAME: ${{ secrets.GH_PACKAGES_USERNAME }}
          GH_PACKAGES_PASSWORD: ${{ secrets.GH_PACKAGES_PASSWORD }}

      - name: "ktlint"
        run: ./gradlew ktlintCheck -x test -x publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GH_PACKAGES_USERNAME: ${{ secrets.GH_PACKAGES_USERNAME }}
          GH_PACKAGES_PASSWORD: ${{ secrets.GH_PACKAGES_PASSWORD }}

      - name: Run Gradle Script
        shell: bash
        run: |
          echo "Run Gradle Script"
          git fetch --tags
          TAG=$(git describe --tags `git rev-list --tags --max-count=1` | tr -d v)
          HASH=$(git rev-parse --short HEAD)
          echo Publishing Jar: $TAG$HASH-SNAPSHOT
          ./gradlew clean build publish -PpublishVersion=$TAG$HASH-SNAPSHOT -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GH_PACKAGES_USERNAME: ${{ secrets.GH_PACKAGES_USERNAME }}
          GH_PACKAGES_PASSWORD: ${{ secrets.GH_PACKAGES_PASSWORD }}
